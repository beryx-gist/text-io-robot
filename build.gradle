import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'application'
    id 'eclipse'
    id 'idea'
    id "com.github.ethankhall.semantic-versioning" version "1.1.0"
    id "com.github.ben-manes.versions" version "0.13.0"
    id "com.github.hierynomus.license" version "0.12.1"
}

project.version.with {
    major = textIoRobotVersionMajor as int
    minor= textIoRobotVersionMinor as int
    patch = textIoRobotVersionPatch as int
    if (project.hasProperty('textIoRobotVersionLabel')) {
        preRelease = textIoRobotVersionLabel
    }
    releaseBuild = Boolean.valueOf(textIoRobotReleaseBuild)
}
ext.textIoRobotVersion = project.version as String
ext.textIoRobotTag = Boolean.valueOf(textIoRobotReleaseBuild) ? "v$ext.textIoRobotVersion" : 'master'


group = 'org.beryx'
version = textIoRobotVersion

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:all,-syntax,-missing', '-quiet')
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

license {
    header rootProject.file("license-header.txt")
    skipExistingHeaders true
    ignoreFailures false
}

dependencies {
    compile 'org.beryx:text-io:3.3.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    runtime ('ch.qos.logback:logback-classic:1.1.7')
}

jar {
    manifest {
        attributes 'Implementation-Title': "${project.archivesBaseName}",
                'Implementation-Version': textIoRobotVersion
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'org.beryx.textio.robot.RobotDemo'
    }
}
mainClassName = 'org.beryx.textio.robot.RobotDemo'

applicationName = "textIoRobot"

startScripts {
    defaultJvmOpts = ['-Dlogback.configurationFile=logback.xml']
}

applicationDistribution.from("${rootProject.projectDir}/dist") {
    filter(ReplaceTokens, tokens:[textIoRobotVersion : textIoRobotVersion])
}

applicationDistribution.from("${rootProject.projectDir}/..") {
    include('LICENSE', 'NOTICE')
}
